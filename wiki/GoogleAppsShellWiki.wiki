#summary The main page for the Google Apps Shell wiki.

= Introduction =

Google Apps Shell (GAS) is a script enabling Google Apps administrators to leverage the Google Apps APIs without programming their own script. At the moment, GAS is limited to a few user-related functions, but will be extended to solve a number of common API use cases.

Google Apps Shell Interface (GASI) is a graphical user interface designed to simplify use of GAS, as well as the Google Apps Manager (GAM).

This project hosts both GAS and GASI.

= Details =

The Google Apps Shell Interface makes it simple to programmatically issue commands to your Google Apps account.  It allows users to programmatically execute commands from both GAS and the open source project [https://code.google.com/p/google-apps-manager Google Apps Manager (GAM)] without having to write a bash script.  Some use cases include:
  * Changing every user's signature to a custom signature including their email address.
  * Moving every user from one domain to another, then removing the old user alias.
  * Creating resource calendars from a CSV file containing calendar resource information.
  * ...and any other interesting combination of Google Apps API commands.


= Download =

To download the most recent version of Google Apps Shell, download gas.zip (you may have to right click and use Save As...):

[http://google-apps-shell.googlecode.com/svn/trunk/gas.zip (Right) click here to download gas.zip]


= Install =

Installation is straightforward so long as you have Python installed.
  # Download gas.zip
  # Unzip gas.zip
  # Through a command line interface, navigate to the gas directory.
  # Execute a command to open gasi.py with Python. This command is typically "python gasi.py"

If you are not sure if you have Python installed, try running the command "python gasi.py" anyway.  If you don't have Python installed, you can get it at [http://www.python.org/ python.org].


= Usage =

First, you will have to authenticate to Google Apps.  To log in, enter an administrative username and password. If you have already logged in to GAS without logging out, you should already be logged in when GAS opens.

The graphical user interface GASI can call functions from both GAS and GAM (version 1.6.1).  To see what commands you can use, either visit the GAM website or click Open Documentation in GAS.

To execute a command, type in the command and click Execute.

GAS can execute custom commands generated from a CSV. To do so, first load a template CSV to the Master Template. Next, find the command you wish to use and enter it in the execution field. When executed, GASI will sequentially run the command for each row in the CSV, replacing any {N} string with the value of the Nth column.

For instance, if you load the template with a CSV containing "John, Lennon, jlennon\nAdrian, Peterson, apeterson", you could set their signatures with the command:

{{{gam user {3}@altostrat.com signature "My name is {1} {2}. Email me at {3}@altostrat.com"}}}

Executing this command would update both signatures.

GASI can execute multiple commands sequentially. To execute multiple commands, put a semicolon in between each command. For instance, if you wish to move John and Adrian between multiple domains, as well as update their signature, you could type the following in the execute field:

{{{gam multi move {3}@altostrat.com {3}@betastrat.com; user {3}@betastrat.com signature "My email address is now {3}@betastrat.com"}}}

Executing this command would move the user's between multiple domains, as well as update their signature to reflect their new email address.